//P1067 多项式输出

#include<stdio.h>
int main()
{
    int n,i,g=0,t,a[105];

    scanf("%d\n",&n);

    for(i=0;i<=n;i++)
    {
        scanf("%d ",&a[i]);
    }

     if(a[0]!=0)
    {printf("%dx^%d",a[0],n);
    g=1;}


        for(i=1;i<=n;i++)
        {   t=n;
            t--;
            if(g==0)
            {
                if(a[i]!=0&&t>1)
                    {printf("%dx^%d",a[i],t);
                    g=1;}
            }
        while(t==0)
        {
             if(a[i]==0)
             return 0;
             else if(g==0&&a[i]>=1)
             {printf("%d",a[i]);
             return 0;}
             else if(a[i]>=1)
             {printf("+%d",a[i]);
             return 0;}
              else {printf("%d",a[i]);
             return 0;}
        }

        while(t==1)
        {
        if(a[i]==0)
            break;
        else if(a[i]>1&&g==0)
            printf("%dx",a[i]);
        else if(a[i]==1&&g==0)
            printf("x");
        else if(a[i]>1)
            printf("+%dx",a[i]);
        else if(a[i]==1)
            printf("+x");
        else if(a[i]==-1)
            printf("-x");
        else if(a[i]<-1)
            printf("%dx",a[i]);
        }


        if(a[i]>1&&t!=1)
            printf("+%dx^%d",a[i],t);
        else if(a[i]==1&&t!=1)
            printf("+x^%d",t);
        else if(a[i]==-1&&t!=1)
            printf("-x^%d",t);
        else if(a[i]<-1&&t!=1)
            printf("%dx^%d",a[i],t);

        }
        return 0;
}
